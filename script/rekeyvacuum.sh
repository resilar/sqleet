#!/bin/sh
# Generate rekeyvacuum.c from SQLite3 amalgamation and print it to stdout.

if [ "$#" -ne 1 ] || ! [ "$1" = "-" -o -f "$1" ]; then
  echo "Usage: $0 <SQLITE3_AMALGAMATION>" >&2
  echo " e.g.: $0 sqlite3.c" >&2
  exit 1
fi

die() {
    echo "[-]" "$@" >&2
    exit 2
}

VERSION="$(sed -n 's/^#define SQLITE_VERSION[^"]*"\([0-9]\+\.[0-9]\+\.[0-9]\+\)"$/\1/p' sqlite3.h)"
[ -z "$VERSION" ] && die "Cannot find SQLite3 version"

cat <<EOF
/*
** Adjusted version of sqlite3RunVacuum to allow reducing or removing reserved
** page space. For this purpose the number of reserved bytes per page for the
** target database is passed as a parameter to the adjusted function.
**
** Change 0: Rename function to sqlite3RunVacuumForRekey
** Change 1: Add parameter 'int nRes'
** Change 2: Remove local variable 'int nRes'
** Change 3: Remove call 'nRes = sqlite3BtreeGetOptimalReserve(pMain)'
**
** The code is generated by script/rekeyvacuum.sh from SQLite version $VERSION.
*/
EOF
sed -n '/^SQLITE_PRIVATE int sqlite3RunVacuum([^;]*$/,/^}$/p' "$1" \
    | sed 's/sqlite3RunVacuum/&ForRekey/'  \
    | sed 's/int iDb)/int iDb, int nRes)/' \
    | grep -v "int nRes;\|nRes = "         \
    | grep "^" || die "Error generating rekeyvacuum.c"
